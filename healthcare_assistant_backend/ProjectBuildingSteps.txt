

Part 2 : Uploading the data into dnamodb

The main aim for this is to fill the DynamoDB the tables which we have in the AWS Dataset and populate the Dynamo DynamoDB
1. filling the Doctors Table 
2. 

Linux: 

aws dynamodb create-table \
  --table-name Doctors \
  --attribute-definitions AttributeName=doctor_id,AttributeType=S \
  --key-schema AttributeName=doctor_id,KeyType=HASH \
  --billing-mode PAY_PER_REQUEST

aws dynamodb create-table \
  --table-name DoctorAvailability \
  --attribute-definitions \
      AttributeName=doctor_id,AttributeType=S \
      AttributeName=date,AttributeType=S \
  --key-schema \
      AttributeName=doctor_id,KeyType=HASH \
      AttributeName=date,KeyType=RANGE \
  --billing-mode PAY_PER_REQUEST

aws dynamodb create-table \
  --table-name PatientAppointments \
  --attribute-definitions AttributeName=appointment_id,AttributeType=S \
  --key-schema AttributeName=appointment_id,KeyType=HASH \
  --billing-mode PAY_PER_REQUEST


Windows: 

Doctors Table 

aws dynamodb create-table `
  --table-name Doctors `
  --attribute-definitions AttributeName=doctor_id,AttributeType=S `
  --key-schema AttributeName=doctor_id,KeyType=HASH `
  --billing-mode PAY_PER_REQUEST


DoctorAvailability Table

aws dynamodb create-table `
  --table-name DoctorAvailability `
  --attribute-definitions `
      AttributeName=doctor_id,AttributeType=S `
      AttributeName=date,AttributeType=S `
  --key-schema `
      AttributeName=doctor_id,KeyType=HASH `
      AttributeName=date,KeyType=RANGE `
  --billing-mode PAY_PER_REQUEST


PatientAppointments Table

aws dynamodb create-table `
  --table-name PatientAppointments `
  --attribute-definitions AttributeName=appointment_id,AttributeType=S `
  --key-schema AttributeName=appointment_id,KeyType=HASH `
  --billing-mode PAY_PER_REQUEST



To check the list of tables :
1. aws dynamodb list-tables


run the below command to upload the dataset to Dynamo DynamoDB
python upload_to_dynamo.py